{"version":3,"sources":["assets/moon.svg","assets/sun.svg","assets/cloud.svg","assets/rain.svg","assets/snow.svg","assets/haze.svg","assets/thunder.svg","assets/blizzard.svg","assets/drizzle.svg","ActualDayBox.jsx","Submenu.jsx","PersonalizeMenu.jsx","FAQ.jsx","BurgerMenu.jsx","DayBox.jsx","Gallery.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ActualDayBox","state","image","Moon","makeElementsLi","apiNameData","columns","Object","values","_this","props","personalizedElements","map","key","position","react_default","a","createElement","className","name","actualData","temp_c","Math","round","feelslike_c","condition","text","wind_kph","wind_degree","pressure_mb","humidity","cloud","uv","undefined","this","conditionState","toLowerCase","includes","setState","Sun","Cloud","Rain","Snow","Haze","Thunder","Blizzard","cityName","imageType","backgroundImage","concat","type","value","style","Component","Submenu","handleOnClick","e","changeBurgerMenuStatus","target","_this2","ref","input","onClick","PersonalizeMenu","valuePersonalizedElement","nrPersonalizedElement","menuData","changePosition","handleOnChange","changedCity","changeCity","autoComplete","onChange","checked","FAQ","BurgerMenu","burgerMenuStatus","changedBurgerMenu","returnBurgerStatus","src_PersonalizeMenu_0","src_FAQ_0","handleClick","getWeather","role","id","src_Submenu_0","DayBox","getDayName","dateStr","locale","Date","toLocaleDateString","weekday","forecastData","day","Drizzle","date","maxtemp_c","mintemp_c","avghumidity","avgtemp_c","maxwind_kph","Gallery","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getHowManySlides","width","howManySlides","height","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","innerWidth","innerHeight","settings","infinite","slidesToShow","swipeToSlide","arrows","dots","lib_default","src_DayBox_0","forecastday","React","API_KEY","App","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","city","cityData","changePositionPersonalizeMenu","changedPositionPersonalizeMenu","keys","_callee","api_call","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","current","forecast","location","stop","src_BurgerMenu_0","src_ActualDayBox_0","defineProperty","src_Gallery_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.28ff0e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/moon.c645594f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.f11bc025.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.0613f897.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.c85aa2af.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.10d1bd9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/haze.64e8bd51.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.6aa163d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/blizzard.d565bfd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.f64853ff.svg\";","import React, { Component } from \"react\";\r\nimport \"./ActualDayBox.css\";\r\nimport Moon from \"./assets/moon.svg\";\r\nimport Sun from \"./assets/sun.svg\";\r\nimport Cloud from \"./assets/cloud.svg\";\r\nimport Rain from \"./assets/rain.svg\";\r\nimport Snow from \"./assets/snow.svg\";\r\nimport Haze from \"./assets/haze.svg\";\r\nimport Thunder from \"./assets/thunder.svg\";\r\nimport Blizzard from \"./assets/blizzard.svg\";\r\n\r\nclass ActualDayBox extends Component {\r\n  componentWillReceiveProps() {\r\n    if (this.props.actualData === undefined) {\r\n      return undefined;\r\n    } else {\r\n      let conditionState = this.props.actualData.condition.text.toLowerCase();\r\n      if (conditionState.includes(\"clear\")) {\r\n        this.setState({ image: Moon });\r\n      } else if (conditionState.includes(\"sunny\")) {\r\n        this.setState({ image: Sun });\r\n      } else if (\r\n        conditionState.includes(\"cloudy\") ||\r\n        conditionState.includes(\"overcast\")\r\n      ) {\r\n        this.setState({ image: Cloud });\r\n      } else if (conditionState.includes(\"rain\")) {\r\n        this.setState({ image: Rain });\r\n      } else if (\r\n        conditionState.includes(\"snow\") ||\r\n        conditionState.includes(\"sleet\") ||\r\n        conditionState.includes(\"ice\")\r\n      ) {\r\n        this.setState({ image: Snow });\r\n      } else if (\r\n        conditionState.includes(\"drizzle\") ||\r\n        conditionState.includes(\"mist\") ||\r\n        conditionState.includes(\"fog\")\r\n      ) {\r\n        this.setState({ image: Haze });\r\n      } else if (conditionState.includes(\"thunder\")) {\r\n        this.setState({ image: Thunder });\r\n      } else if (conditionState.includes(\"blizzard\")) {\r\n        this.setState({ image: Blizzard });\r\n      }\r\n    }\r\n  }\r\n  state = {\r\n    image: Moon\r\n  };\r\n  makeElementsLi = () => {\r\n    let apiNameData = \" \";\r\n    let columns = 0;\r\n    Object.values(this.props.personalizedElements).map((values, key) => {\r\n      if (values.position) {\r\n        columns++;\r\n      }\r\n      return columns;\r\n    });\r\n    if (columns > 8) {\r\n      columns = 3;\r\n    } else if (columns > 4) {\r\n      columns = 2;\r\n    } else columns = 1;\r\n    return (\r\n      <div className={\"listActualBox column\" + columns}>\r\n        <ul>\r\n          {Object.values(this.props.personalizedElements).map((values, key) => {\r\n            if (values.position) {\r\n              switch (values.name) {\r\n                case \"Temperature °C\":\r\n                  apiNameData = this.props.actualData.temp_c;\r\n                  break;\r\n                case \"Max temperature °C\":\r\n                  apiNameData = Math.round(this.props.actualData.temp_c + 3);\r\n                  break;\r\n                case \"Min temperature °C\":\r\n                  apiNameData = Math.round(this.props.actualData.temp_c - 3);\r\n                  break;\r\n                case \"Sensed temperature °C\":\r\n                  apiNameData = this.props.actualData.feelslike_c;\r\n                  break;\r\n                case \"Condition\":\r\n                  apiNameData = this.props.actualData.condition.text;\r\n                  break;\r\n                case \"Wind speed km/h\":\r\n                  apiNameData = this.props.actualData.wind_kph;\r\n                  break;\r\n                case \"Wind degree\":\r\n                  apiNameData = this.props.actualData.wind_degree;\r\n                  break;\r\n                case \"Pressure hpa\":\r\n                  apiNameData = this.props.actualData.pressure_mb;\r\n                  break;\r\n                case \"Humidity %\":\r\n                  apiNameData = this.props.actualData.humidity;\r\n                  break;\r\n                case \"Cloudy\":\r\n                  apiNameData = this.props.actualData.cloud;\r\n                  break;\r\n                case \"UV\":\r\n                  apiNameData = this.props.actualData.uv;\r\n                  break;\r\n                default:\r\n                  apiNameData = \"Error\";\r\n                  break;\r\n              }\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"actualBoxName\">{values.name} </div>\r\n                  <div className=\"actualBoxValue\">{apiNameData}</div>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    if (\r\n      this.props.actualData === undefined ||\r\n      this.props.cityName === undefined\r\n    ) {\r\n      return <div className=\"noData\">No data, wait or try again later</div>;\r\n    } else {\r\n      let imageType = {\r\n        backgroundImage: `url(${this.state.image})`\r\n      };\r\n      return (\r\n        <div className=\"actualDayBox\">\r\n          <div className=\"cityActualBox\">\r\n            <input type=\"text\" name=\"name\" value={this.props.cityName.name} />\r\n          </div>\r\n          <div className=\"panelActualBox\">\r\n            <div className=\"imageDivActualBox\">\r\n              <div className=\"imageActualBox\" style={imageType} />\r\n            </div>\r\n            <div className=\"listDivActualBox\">{this.makeElementsLi()}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default ActualDayBox;\r\n","import React, { Component } from \"react\";\r\nimport \"./Submenu.css\";\r\n\r\nclass Submenu extends Component {\r\n  handleOnClick = e => {\r\n    this.props.changeBurgerMenuStatus(e.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"submenu\">\r\n        <input\r\n          type=\"button\"\r\n          ref={ref => (this.input = ref)}\r\n          className=\"submenuInput\"\r\n          value={\"Personalize\"}\r\n          onClick={this.handleOnClick}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          ref={ref => (this.input = ref)}\r\n          className=\"submenuInput\"\r\n          value={\"FAQ\"}\r\n          onClick={this.handleOnClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Submenu;\r\n","import React, { Component } from \"react\";\r\nimport \"./PersonalizeMenu.css\";\r\n\r\nclass PersonalizeMenu extends Component {\r\n  // FUNKCJA TA WYKONUJE FUNKCJE NADANA Z PROPSOW, I PRZESYLA W NIEJ NAZWE KONKRETNEJ DANY, ORAZ JEJ WARTOSC (czy ma checked false albo true)\r\n  handleOnClick = e => {\r\n    let valuePersonalizedElement = e.target.value;\r\n    let nrPersonalizedElement = e.target.name;\r\n    this.props.menuData.changePosition(\r\n      valuePersonalizedElement,\r\n      nrPersonalizedElement\r\n    );\r\n  };\r\n  handleOnChange = e => {\r\n    const changedCity = e.target.value;\r\n    this.props.menuData.changeCity(changedCity);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"divPersonalizeMenu\">\r\n        <div className=\"personalizeCityDiv\">\r\n          City\r\n          <input\r\n            autoComplete=\"off\"\r\n            ref={ref => (this.input = ref)}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleOnChange}\r\n          />\r\n        </div>\r\n        <ul className=\"personalizeMenu\">\r\n          {Object.values(this.props.menuData.personalizedElements).map(\r\n            (values, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"textPersonalizeMenu\">{values.name}</div>\r\n                  <label className=\"switch\">\r\n                    <input\r\n                      ref={ref => (this.input = ref)}\r\n                      type=\"checkbox\"\r\n                      value={values.position}\r\n                      checked={values.position}\r\n                      name={key}\r\n                      onChange={this.handleOnClick}\r\n                    />\r\n                    <div />\r\n                  </label>\r\n                </li>\r\n              );\r\n            }\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PersonalizeMenu;\r\n","import React, { Component } from \"react\";\r\nimport \"./FAQ.css\";\r\nclass FAQ extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"help\">\r\n        <div className=\"titleHelp\">FAQ</div>\r\n        <div className=\"textHelp\">\r\n          <div className=\"question\">\r\n            \"No data, wait or try again later\"\r\n            <div className=\"answer\">\r\n              {\" \"}\r\n              You may have entered the incorrect city name in the personalize\r\n              section. This problem also appears when the application cannot\r\n              download the weather data from the server.\r\n            </div>\r\n          </div>\r\n          <div className=\"question\">\r\n            I noticed the problem, what should I do?\r\n            <div className=\"answer\">\r\n              {\" \"}\r\n              If you notice any bug or inaccuracy please contact me.\r\n            </div>\r\n          </div>\r\n          <div className=\"question\">\r\n            How to contact the creator?\r\n            <div className=\"answer\">\r\n              {\" \"}\r\n              Write to me on github. My account is https://github.com/kuzar94\r\n            </div>\r\n          </div>\r\n          <div className=\"question\">\r\n            How can I see the source of the code?\r\n            <div className=\"answer\"> https://github.com/kuzar94/WeatherApp</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FAQ;\r\n","import React, { Component } from \"react\";\r\nimport \"./BurgerMenu.css\";\r\nimport Submenu from \"./Submenu\";\r\nimport PersonalizeMenu from \"./PersonalizeMenu\";\r\nimport FAQ from \"./FAQ\";\r\n\r\nclass BurgerMenu extends Component {\r\n  state = {\r\n    burgerMenuStatus: \"Personalize\"\r\n  };\r\n  changeBurgerMenuStatus = changedBurgerMenu => {\r\n    this.setState({ burgerMenuStatus: changedBurgerMenu });\r\n  };\r\n  returnBurgerStatus = () => {\r\n    switch (this.state.burgerMenuStatus) {\r\n      case \"Personalize\":\r\n        return <PersonalizeMenu menuData={this.props} />;\r\n      case \"FAQ\":\r\n        return <FAQ />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  handleClick = () => {\r\n    this.props.getWeather();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav role=\"navigation\">\r\n          <div id=\"menuToggle\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"menuCheckbox\"\r\n              onClick={this.handleClick}\r\n            />\r\n            <span />\r\n            <span />\r\n            <span />\r\n            <div id=\"menu\">\r\n              <Submenu changeBurgerMenuStatus={this.changeBurgerMenuStatus} />\r\n              {this.returnBurgerStatus()}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BurgerMenu;\r\n","import React, { Component } from \"react\";\r\nimport \"./DayBox.css\";\r\nimport Moon from \"./assets/moon.svg\";\r\nimport Sun from \"./assets/sun.svg\";\r\nimport Cloud from \"./assets/cloud.svg\";\r\nimport Rain from \"./assets/rain.svg\";\r\nimport Snow from \"./assets/snow.svg\";\r\nimport Haze from \"./assets/haze.svg\";\r\nimport Thunder from \"./assets/thunder.svg\";\r\nimport Blizzard from \"./assets/blizzard.svg\";\r\nimport Drizzle from \"./assets/drizzle.svg\";\r\nclass DayBox extends Component {\r\n  state = {\r\n    image: undefined\r\n  };\r\n  componentWillReceiveProps() {\r\n    if (this.props.forecastData === undefined) {\r\n      return undefined;\r\n    } else {\r\n      let conditionState = this.props.forecastData.day.condition.text.toLowerCase();\r\n      if (conditionState.includes(\"clear\")) {\r\n        this.setState({ image: Moon }, function() {});\r\n      } else if (conditionState.includes(\"sunny\")) {\r\n        this.setState({ image: Sun }, function() {});\r\n      } else if (\r\n        conditionState.includes(\"cloudy\") ||\r\n        conditionState.includes(\"overcast\")\r\n      ) {\r\n        this.setState({ image: Cloud }, function() {});\r\n      } else if (conditionState.includes(\"rain\")) {\r\n        this.setState({ image: Rain }, function() {});\r\n      } else if (\r\n        conditionState.includes(\"snow\") ||\r\n        conditionState.includes(\"sleet\") ||\r\n        conditionState.includes(\"ice\")\r\n      ) {\r\n        this.setState({ image: Snow }, function() {});\r\n      } else if (conditionState.includes(\"drizzle\")) {\r\n        this.setState({ image: Drizzle }, function() {});\r\n      } else if (\r\n        conditionState.includes(\"mist\") ||\r\n        conditionState.includes(\"fog\")\r\n      ) {\r\n        this.setState({ image: Haze }, function() {});\r\n      } else if (conditionState.includes(\"thunder\")) {\r\n        this.setState({ image: Thunder }, function() {});\r\n      } else if (conditionState.includes(\"blizzard\")) {\r\n        this.setState({ image: Blizzard }, function() {});\r\n      }\r\n    }\r\n  }\r\n\r\n  getDayName = (dateStr, locale) => {\r\n    var date = new Date(dateStr);\r\n    return date.toLocaleDateString(locale, { weekday: \"long\" });\r\n  };\r\n\r\n  render() {\r\n    let imageType = {\r\n      backgroundImage: `url(${this.state.image})`\r\n    };\r\n    return (\r\n      <div className=\"weatherBox\">\r\n        <div className=\"weekDayBox\">\r\n          {this.getDayName(this.props.forecastData.date, \"en-US\")}\r\n        </div>\r\n        <div className=\"imageBox\" style={imageType} />\r\n        <div className=\"listDataBox\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"dayBoxName\">Max temperature °C</div>\r\n              <div className=\"dayBoxValue\">\r\n                {this.props.forecastData.day.maxtemp_c}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"dayBoxName\">Min temperature °C</div>\r\n              <div className=\"dayBoxValue\">\r\n                {this.props.forecastData.day.mintemp_c}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"dayBoxName\">Cloudy</div>\r\n              <div className=\"dayBoxValue\">\r\n                {this.props.forecastData.day.avghumidity}\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"icons\">\r\n          <div className=\"icon\">\r\n            <div className=\"iconNr1Image iconWheather\" />\r\n            <div className=\"iconText\">\r\n              {this.props.forecastData.day.avgtemp_c}\r\n            </div>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <div className=\"iconNr2Image iconWheather\" />\r\n            <div className=\"iconText\">\r\n              {this.props.forecastData.day.maxwind_kph}\r\n            </div>\r\n          </div>\r\n          <div className=\"icon\">\r\n            <div className=\"iconNr3Image iconWheather\" />\r\n            <div className=\"iconText\">\r\n              {this.props.forecastData.day.avghumidity}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dataDayBox\">{this.props.forecastData.date}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DayBox;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport DayBox from \"./DayBox\";\r\nimport \"./Gallery.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nclass Gallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0, howManySlides: 3.5 };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    window.addEventListener(\"load\", this.updateWindowDimensions);\r\n    this.getHowManySlides();\r\n  }\r\n  getHowManySlides = () => {\r\n    if (this.state.width > 1100) {\r\n      this.setState({ howManySlides: 3.5 });\r\n    } else if (this.state.width > 800) {\r\n      this.setState({ howManySlides: 2.5 });\r\n    } else if (this.state.width > 500) {\r\n      this.setState({ howManySlides: 1.5 });\r\n    } else if (this.state.width > 1) {\r\n      this.setState({ howManySlides: 1.2 });\r\n    }\r\n  };\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    this.getHowManySlides();\r\n  }\r\n  render() {\r\n    var settings = {\r\n      infinite: false,\r\n      slidesToShow: this.state.howManySlides,\r\n      swipeToSlide: true,\r\n      arrows: false,\r\n      dots: false\r\n    };\r\n    if (this.props.forecastData === undefined) {\r\n      return <div className=\"noDataBox\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"carouselDiv\">\r\n          <Slider {...settings}>\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[1]}\r\n            />\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[2]}\r\n            />\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[3]}\r\n            />\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[4]}\r\n            />\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[5]}\r\n            />\r\n            <DayBox\r\n              menuData={this.props}\r\n              forecastData={this.props.forecastData.forecastday[6]}\r\n            />\r\n          </Slider>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Gallery;\r\n","import React, { Component } from \"react\";\nimport ActualDayBox from \"./ActualDayBox\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport \"./App.css\";\nimport Gallery from \"./Gallery\";\n\nconst API_KEY = \"b4a3127ec4104f91b38103456192707\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  state = {\n    personalizedElements: {\n      a0: {\n        name: \"Temperature °C\",\n        position: true\n      },\n      a1: {\n        name: \"Max temperature °C\",\n        position: true\n      },\n      a2: {\n        name: \"Min temperature °C\",\n        position: true\n      },\n      a3: {\n        name: \"Sensed temperature °C\",\n        position: true\n      },\n      a4: {\n        name: \"Condition\",\n        position: true\n      },\n      a5: {\n        name: \"Wind speed km/h\",\n        position: false\n      },\n      a6: {\n        name: \"Wind degree\",\n        position: false\n      },\n      a7: {\n        name: \"Pressure hpa\",\n        position: false\n      },\n      a8: {\n        name: \"Humidity %\",\n        position: false\n      },\n      a9: {\n        name: \"Cloudy\",\n        position: false\n      },\n      a10: {\n        name: \"UV\",\n        position: false\n      }\n    },\n    city: \"Gdansk\",\n    actualData: undefined,\n    forecastData: undefined,\n    cityData: \"undefined\"\n  };\n  changeCity = changedCity => {\n    this.setState({ city: changedCity });\n  };\n  changePositionPersonalizeMenu = (\n    valuePersonalizedElement,\n    nrPersonalizedElement\n  ) => {\n    const changedPositionPersonalizeMenu = this.state.personalizedElements;\n    if (valuePersonalizedElement === \"false\") {\n      changedPositionPersonalizeMenu[\n        Object.keys(changedPositionPersonalizeMenu)[nrPersonalizedElement]\n      ].position = true;\n    } else {\n      changedPositionPersonalizeMenu[\n        Object.keys(changedPositionPersonalizeMenu)[nrPersonalizedElement]\n      ].position = false;\n    }\n    this.setState({ personalizedElements: changedPositionPersonalizeMenu });\n  };\n  getWeather = async () => {\n    const api_call = await fetch(\n      `https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${\n        this.state.city\n      }&days=7`\n    );\n    const data = await api_call.json();\n    this.setState({ actualData: data.current });\n    this.setState({ forecastData: data.forecast });\n    this.setState({ cityData: data.location });\n  };\n  render() {\n    return (\n      <div className=\"weatherBoxes\">\n        <BurgerMenu\n          personalizedElements={this.state.personalizedElements}\n          changePosition={this.changePositionPersonalizeMenu}\n          changeCity={this.changeCity}\n          getWeather={this.getWeather}\n        />\n        <ActualDayBox\n          personalizedElements={this.state.personalizedElements}\n          cityName={this.state.city}\n          actualData={this.state.actualData}\n          cityName={this.state.cityData}\n        />\n        <Gallery\n          personalizedElements={this.state.personalizedElements}\n          forecastData={this.state.forecastData}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}